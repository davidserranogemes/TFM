Leyendo  mnist
Executing  mnist with  Convolutional  arquitecture.

>>> Imports:
#coding=utf-8

try:
    from keras.datasets import mnist
except:
    pass

try:
    from keras.datasets import fashion_mnist
except:
    pass

try:
    from keras.datasets import cifar10
except:
    pass

try:
    from keras.datasets import imdb
except:
    pass

try:
    from keras import backend as K
except:
    pass

try:
    import numpy as np
except:
    pass

try:
    import sys
except:
    pass

try:
    import time
except:
    pass

try:
    import urllib.request
except:
    pass

try:
    import os
except:
    pass

try:
    from sklearn.model_selection import StratifiedKFold
except:
    pass

try:
    from hyperopt import Trials, STATUS_OK, tpe
except:
    pass

try:
    from keras.layers.core import Dense, Dropout, Activation, Flatten
except:
    pass

try:
    from keras.layers.convolutional import Convolution2D, MaxPooling2D
except:
    pass

try:
    from keras.optimizers import SGD, Adam
except:
    pass

try:
    from keras.models import Sequential
except:
    pass

try:
    from keras.utils import np_utils
except:
    pass

try:
    from hyperas import optim
except:
    pass

try:
    from hyperas.distributions import choice, uniform
except:
    pass

>>> Hyperas search space:

def get_space():
    return {
        'Dropout': hp.uniform('Dropout', 0, 0.5),
        'Dropout_1': hp.uniform('Dropout_1', 0, 0.5),
        'Dropout_2': hp.choice('Dropout_2', ['two','three']),
        'Dropout_3': hp.uniform('Dropout_3', 0, 0.5),
        'optimizer': hp.choice('optimizer', ['rmsprop', 'adam', 'sgd']),
        'batch_size': hp.choice('batch_size', [64, 128]),
    }

>>> Data
  1: 
  2: (X_train, y_train), (X_test, y_test) = mnist.load_data()
  3: 
  4: X_train = X_train.reshape(X_train.shape+(1,))
  5: X_test = X_test.reshape(X_test.shape+(1,))
  6: 
  7: nb_classes = len(np.unique(y_train))
  8: y_train = np_utils.to_categorical(y_train, nb_classes)
  9: y_test = np_utils.to_categorical(y_test, nb_classes)
 10: 
 11: 
 12: 
 13: 
>>> Resulting replaced keras model:

   1: def keras_fmin_fnct(space):
   2: 
   3: 	nb_classes = y_train.shape[1]
   4: 
   5: 	num_epoch=1*100
   6: 	num_epoch=1*1
   7: 
   8: 	model = Sequential()
   9: 
  10: 	model.add(Convolution2D(32, 3, 3, border_mode='same',
  11: 	                        input_shape=X_train.shape[1:]))
  12: 	model.add(Activation('relu'))
  13: 	model.add(Convolution2D(32, 3, 3))
  14: 	model.add(Activation('relu'))
  15: 	model.add(MaxPooling2D(pool_size=(2, 2)))
  16: 	model.add(Dropout(space['Dropout']))
  17: 
  18: 	model.add(Convolution2D(64, 3, 3, border_mode='same'))
  19: 	model.add(Activation('relu'))
  20: 	model.add(Convolution2D(64, 3, 3))
  21: 	model.add(Activation('relu'))
  22: 	model.add(MaxPooling2D(pool_size=(2, 2)))
  23: 	model.add(Dropout(space['Dropout_1']))
  24: 
  25: 	if space['Dropout_2'] == 'three':
  26: 		model.add(Convolution2D(128, 3, 3, border_mode='same'))
  27: 		model.add(Activation('relu'))
  28: 		model.add(Convolution2D(128, 3, 3))
  29: 		model.add(Activation('relu'))
  30: 		model.add(MaxPooling2D(pool_size=(2, 2)))
  31: 		model.add(Dropout(space['Dropout_3']))
  32: 
  33: 	model.add(Flatten())
  34: 	model.add(Dense(512))
  35: 	model.add(Activation('relu'))
  36: 	model.add(Dropout(0.5))
  37: 	model.add(Dense(nb_classes))
  38: 	model.add(Activation('softmax'))
  39: 
  40: 	 # let's train the model using SGD + momentum (how original).
  41: 	#sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
  42: 	
  43: 	model.compile(loss='categorical_crossentropy',
  44: 	              optimizer=space['optimizer'],
  45: 	              metrics=['accuracy'])
  46: 
  47: 	result = model.fit(X_train, y_train,
  48: 	          batch_size=space['batch_size'],
  49: 	          nb_epoch=num_epoch,
  50: 	          verbose=2,
  51: 	          validation_split=0.1)
  52: 	validation_acc = np.amax(result.history['val_acc']) 
  53: 	print('Best validation acc of epoch:', validation_acc)
  54: 	return {'loss': -validation_acc, 'status': STATUS_OK, 'model': model}
  55: 
  0%|          | 0/10 [00:00<?, ?it/s, best loss: ?]                                                    Train on 54000 samples, validate on 6000 samples
  0%|          | 0/10 [00:00<?, ?it/s, best loss: ?]                                                    Epoch 1/1
  0%|          | 0/10 [00:00<?, ?it/s, best loss: ?]                                                     - 25s - loss: 1.1114 - acc: 0.6250 - val_loss: 0.1308 - val_acc: 0.9620

  0%|          | 0/10 [00:25<?, ?it/s, best loss: ?]                                                    Best validation acc of epoch:
  0%|          | 0/10 [00:25<?, ?it/s, best loss: ?]                                                    0.9619999998410543
  0%|          | 0/10 [00:25<?, ?it/s, best loss: ?] 10%|█         | 1/10 [00:25<03:49, 25.47s/it, best loss: -0.9619999998410543]                                                                              Train on 54000 samples, validate on 6000 samples
 10%|█         | 1/10 [00:25<03:49, 25.47s/it, best loss: -0.9619999998410543]                                                                              Epoch 1/1
 10%|█         | 1/10 [00:25<03:49, 25.47s/it, best loss: -0.9619999998410543]                                                                               - 9s - loss: 13.1046 - acc: 0.1865 - val_loss: 12.8757 - val_acc: 0.2012

 10%|█         | 1/10 [00:35<03:49, 25.47s/it, best loss: -0.9619999998410543]                                                                              Best validation acc of epoch:
 10%|█         | 1/10 [00:35<03:49, 25.47s/it, best loss: -0.9619999998410543]                                                                              0.20116666666666666
 10%|█         | 1/10 [00:35<03:49, 25.47s/it, best loss: -0.9619999998410543] 20%|██        | 2/10 [00:35<02:46, 20.76s/it, best loss: -0.9619999998410543]                                                                              Train on 54000 samples, validate on 6000 samples
 20%|██        | 2/10 [00:35<02:46, 20.76s/it, best loss: -0.9619999998410543]                                                                              Epoch 1/1
 20%|██        | 2/10 [00:35<02:46, 20.76s/it, best loss: -0.9619999998410543]                                                                               - 10s - loss: 0.3009 - acc: 0.9074 - val_loss: 0.0601 - val_acc: 0.9817

 20%|██        | 2/10 [00:46<02:46, 20.76s/it, best loss: -0.9619999998410543]                                                                              Best validation acc of epoch:
 20%|██        | 2/10 [00:46<02:46, 20.76s/it, best loss: -0.9619999998410543]                                                                              0.9816666666666667
 20%|██        | 2/10 [00:46<02:46, 20.76s/it, best loss: -0.9619999998410543] 30%|███       | 3/10 [00:46<02:04, 17.79s/it, best loss: -0.9816666666666667]                                                                              Train on 54000 samples, validate on 6000 samples
 30%|███       | 3/10 [00:46<02:04, 17.79s/it, best loss: -0.9816666666666667]                                                                              Epoch 1/1
 30%|███       | 3/10 [00:46<02:04, 17.79s/it, best loss: -0.9816666666666667]                                                                               - 8s - loss: 0.7621 - acc: 0.8488 - val_loss: 0.0565 - val_acc: 0.9820

 30%|███       | 3/10 [00:54<02:04, 17.79s/it, best loss: -0.9816666666666667]                                                                              Best validation acc of epoch:
 30%|███       | 3/10 [00:54<02:04, 17.79s/it, best loss: -0.9816666666666667]                                                                              0.9819999995231629
 30%|███       | 3/10 [00:54<02:04, 17.79s/it, best loss: -0.9816666666666667] 40%|████      | 4/10 [00:54<01:29, 14.91s/it, best loss: -0.9819999995231629]                                                                              Train on 54000 samples, validate on 6000 samples
 40%|████      | 4/10 [00:54<01:29, 14.91s/it, best loss: -0.9819999995231629]                                                                              Epoch 1/1
 40%|████      | 4/10 [00:54<01:29, 14.91s/it, best loss: -0.9819999995231629]                                                                               - 8s - loss: 0.3751 - acc: 0.8905 - val_loss: 0.0494 - val_acc: 0.9833

 40%|████      | 4/10 [01:02<01:29, 14.91s/it, best loss: -0.9819999995231629]                                                                              Best validation acc of epoch:
 40%|████      | 4/10 [01:02<01:29, 14.91s/it, best loss: -0.9819999995231629]                                                                              0.9833333328564962
 40%|████      | 4/10 [01:02<01:29, 14.91s/it, best loss: -0.9819999995231629] 50%|█████     | 5/10 [01:02<01:05, 13.04s/it, best loss: -0.9833333328564962]                                                                              Train on 54000 samples, validate on 6000 samples
 50%|█████     | 5/10 [01:03<01:05, 13.04s/it, best loss: -0.9833333328564962]                                                                              Epoch 1/1
 50%|█████     | 5/10 [01:03<01:05, 13.04s/it, best loss: -0.9833333328564962]                                                                               - 7s - loss: 3.5191 - acc: 0.6482 - val_loss: 0.1144 - val_acc: 0.9685

 50%|█████     | 5/10 [01:10<01:05, 13.04s/it, best loss: -0.9833333328564962]                                                                              Best validation acc of epoch:
 50%|█████     | 5/10 [01:10<01:05, 13.04s/it, best loss: -0.9833333328564962]                                                                              0.9685000003178914
 50%|█████     | 5/10 [01:10<01:05, 13.04s/it, best loss: -0.9833333328564962] 60%|██████    | 6/10 [01:10<00:45, 11.41s/it, best loss: -0.9833333328564962]                                                                              Train on 54000 samples, validate on 6000 samples
 60%|██████    | 6/10 [01:10<00:45, 11.41s/it, best loss: -0.9833333328564962]                                                                              Epoch 1/1
 60%|██████    | 6/10 [01:10<00:45, 11.41s/it, best loss: -0.9833333328564962]                                                                               - 8s - loss: 14.5115 - acc: 0.0995 - val_loss: 14.5063 - val_acc: 0.1000

 60%|██████    | 6/10 [01:18<00:45, 11.41s/it, best loss: -0.9833333328564962]                                                                              Best validation acc of epoch:
 60%|██████    | 6/10 [01:18<00:45, 11.41s/it, best loss: -0.9833333328564962]                                                                              0.09999999996026357
 60%|██████    | 6/10 [01:18<00:45, 11.41s/it, best loss: -0.9833333328564962] 70%|███████   | 7/10 [01:18<00:31, 10.38s/it, best loss: -0.9833333328564962]                                                                              Train on 54000 samples, validate on 6000 samples
 70%|███████   | 7/10 [01:18<00:31, 10.38s/it, best loss: -0.9833333328564962]                                                                              Epoch 1/1
 70%|███████   | 7/10 [01:18<00:31, 10.38s/it, best loss: -0.9833333328564962]                                                                               - 7s - loss: 0.6182 - acc: 0.8464 - val_loss: 0.0784 - val_acc: 0.9777

 70%|███████   | 7/10 [01:26<00:31, 10.38s/it, best loss: -0.9833333328564962]                                                                              Best validation acc of epoch:
 70%|███████   | 7/10 [01:26<00:31, 10.38s/it, best loss: -0.9833333328564962]                                                                              0.9776666668256124
 70%|███████   | 7/10 [01:26<00:31, 10.38s/it, best loss: -0.9833333328564962] 80%|████████  | 8/10 [01:26<00:19,  9.57s/it, best loss: -0.9833333328564962]                                                                              Train on 54000 samples, validate on 6000 samples
 80%|████████  | 8/10 [01:26<00:19,  9.57s/it, best loss: -0.9833333328564962]                                                                              Epoch 1/1
 80%|████████  | 8/10 [01:26<00:19,  9.57s/it, best loss: -0.9833333328564962]                                                                               - 9s - loss: 0.4382 - acc: 0.8662 - val_loss: 0.0633 - val_acc: 0.9793

 80%|████████  | 8/10 [01:35<00:19,  9.57s/it, best loss: -0.9833333328564962]                                                                              Best validation acc of epoch:
 80%|████████  | 8/10 [01:35<00:19,  9.57s/it, best loss: -0.9833333328564962]                                                                              0.9793333328564962
 80%|████████  | 8/10 [01:35<00:19,  9.57s/it, best loss: -0.9833333328564962] 90%|█████████ | 9/10 [01:35<00:09,  9.42s/it, best loss: -0.9833333328564962]                                                                              Train on 54000 samples, validate on 6000 samples
 90%|█████████ | 9/10 [01:35<00:09,  9.42s/it, best loss: -0.9833333328564962]                                                                              Epoch 1/1
 90%|█████████ | 9/10 [01:35<00:09,  9.42s/it, best loss: -0.9833333328564962]                                                                               - 11s - loss: 0.3250 - acc: 0.8979 - val_loss: 0.0683 - val_acc: 0.9807

 90%|█████████ | 9/10 [01:46<00:09,  9.42s/it, best loss: -0.9833333328564962]                                                                              Best validation acc of epoch:
 90%|█████████ | 9/10 [01:46<00:09,  9.42s/it, best loss: -0.9833333328564962]                                                                              0.9806666666666667
 90%|█████████ | 9/10 [01:46<00:09,  9.42s/it, best loss: -0.9833333328564962]100%|██████████| 10/10 [01:46<00:00, 10.02s/it, best loss: -0.9833333328564962]
--- 107.27069616317749 seconds ---
Evalutation of best performing model:

   32/10000 [..............................] - ETA: 6s
  704/10000 [=>............................] - ETA: 0s
 1248/10000 [==>...........................] - ETA: 0s
 1792/10000 [====>.........................] - ETA: 0s
 2336/10000 [======>.......................] - ETA: 0s
 2880/10000 [=======>......................] - ETA: 0s
 3456/10000 [=========>....................] - ETA: 0s
 4032/10000 [===========>..................] - ETA: 0s
 4576/10000 [============>.................] - ETA: 0s
 5152/10000 [==============>...............] - ETA: 0s
 5664/10000 [===============>..............] - ETA: 0s
 6272/10000 [=================>............] - ETA: 0s
 6976/10000 [===================>..........] - ETA: 0s
 7552/10000 [=====================>........] - ETA: 0s
 8128/10000 [=======================>......] - ETA: 0s
 8704/10000 [=========================>....] - ETA: 0s
 9312/10000 [==========================>...] - ETA: 0s
 9856/10000 [============================>.] - ETA: 0s
10000/10000 [==============================] - 1s 93us/step
[0.04473192213727161, 0.9861]
Time consumed:  0.030114075011677212  hours
{'Dropout': 0.06874772122693129, 'Dropout_1': 0.293803364162271, 'Dropout_2': 1, 'Dropout_3': 0.11654484411565585, 'batch_size': 1, 'optimizer': 0}
